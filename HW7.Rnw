\documentclass{article}
\usepackage[margin=1.0in]{geometry} % To set margins
\usepackage{amsmath}  % This allows me to use the align functionality.
                      % If you find yourself trying to replicate
                      % something you found online, ensure you're
                      % loading the necessary packages!
\usepackage{amsfonts} % Math font
\usepackage{fancyvrb}
\usepackage{hyperref} % For including hyperlinks
\usepackage[shortlabels]{enumitem}% For enumerated lists with labels specified
                                  % We had to run tlmgr_install("enumitem") in R
\usepackage{float}    % For telling R where to put a table/figure
\usepackage{natbib}        %For the bibliography
\bibliographystyle{apalike}%For the bibliography

\begin{document}
  \begin{enumerate}
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Question 1
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \item Write a \texttt{pois.prob()} function that computes $P(X=x)$, 
    $P(X \neq x)$, $P(X<x)$, $P(X \leq x)$, $P(X > x)$, and $P(X \geq x).$ Enable the user to specify the rate parameter $\lambda$.
<<size="scriptsize">>=
pois.prob <- function(x, size, prob, type="<="){
  # Use dpois and ppois to conditionally return the correct probability
  lambda = prob* size
  if(type == "="){
    return(dpois(x=x, lambda = lambda))
  }else if(type == "!="){
    return(1 - dpois(x=x, lambda = lambda))
  }else if(type == "<"){
    return(ppois(q=(x-1), lambda = lambda))
  }else if(type == ">"){
    return(1 - ppois(q=x, lambda = lambda))
  }else if(type == ">="){
    return(1 - ppois(q=(x-1), lambda = lambda))
  }else if(type == "<="){
    return(ppois(q=x, lambda = lambda))
  }
  
}
#testing all
pois.prob(5, 10, 0.5, type = "=")
pois.prob(5, 10, 0.5, type = "!=")
pois.prob(5, 10, 0.5, type = ">=")
pois.prob(5, 10, 0.5, type = "<")
pois.prob(5, 10, 0.5, type = "<=")
pois.prob(5, 10, 0.5, type = ">")
@
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % Question 2
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    \item Write a \texttt{beta.prob()} function that computes $P(X=x)$, 
    $P(X \neq x)$, $P(X<x)$, $P(X \leq x)$, $P(X > x)$, and $P(X \geq x)$
    for a beta distribution. Enable the user to specify the shape parameters
    $\alpha$ and $\beta$.
<<size="scriptsize">>=
# beta dist uses a(prob of occuring) and b(prob of not)
beta.prob <- function(x, size, prob, type="<="){
  # Use dbeta and pbeta to conditionally return the correct probability
  a = prob* size
  b = size *(1-prob)
  if(type == "="){
    return(dbeta(x = x, a, b))
  }else if(type == "!="){
    return(1 - dbeta(x = x, a, b))
  }else if(type == "<"){
    return(pbeta(q = x, a, b))
  }else if(type == ">"){
    return(1 - pbeta(q = x, a, b))
  }else if(type == ">="){
    return(1 - pbeta(q = x, a, b))
  }else if(type == "<="){
    return(pbeta(q = x, a, b))
  }
  
}

beta.prob(0.3, 10, 0.3, type = "=")
beta.prob(0.3, 10, 0.3, type = "!=")
beta.prob(0.3, 10, 0.3, type = ">")
beta.prob(0.3, 10, 0.3, type = "<=")
beta.prob(0.3, 10, 0.3, type = "<")
beta.prob(0.3, 10, 0.3, type = ">=")

@
\end{enumerate}
\bibliography{bibliography}
\end{document}
